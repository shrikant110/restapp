# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
# spring.datasource.driverClassName = com.mysql.jdbc.Driver
# spring.datasource.url = jdbc:mysql://localhost/spring_auth
# spring.datasource.username = root
# spring.datasource.password = root

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
# spring.jpa.hibernate.ddl-auto = create

# Naming strategy
# spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.driverClassName =org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://dbaurora.c8t6qqhovfzc.us-east-1.rds.amazonaws.com:5432/auroradb
spring.datasource.username=dbaurora_user
spring.datasource.password=dbaurora
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username=postgres.

#spring.datasource.password=root

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
management.security.enabled=false
URL.LOGIN = /account/login
URL.LOGOUT = /logout
SPRINGKEY=KEY_COD
TOKEN_VALIDITY=1800